{"version":3,"sources":["webpack:///./src/components/Card/Card.js","webpack:///./src/components/Card/index.js","webpack:///./src/components/Layout/layout.js","webpack:///./src/components/Layout/index.js","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./src/pages/blog.js","webpack:///./src/components/SEO/seo.js","webpack:///./src/components/SEO/index.js"],"names":["Card","title","subtitle","link","tags","image","href","className","src","alt","map","tag","key","defaultProps","Layout","children","data","Header","siteTitle","site","siteMetadata","style","margin","maxWidth","padding","Date","getFullYear","createHTML","url","this","blog","render","description","keywords","photo","to","Component","SEO","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","author","property","siteUrl","ogImage","concat"],"mappings":"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","file":"component---src-pages-blog-js-4eab13cb08ce2a77756c.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n// import { Container } from './styles';\r\n\r\nconst Card = ({ title, subtitle, link, tags, image }) => (\r\n  <a href={link}>\r\n    <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"media\">\r\n          <div className=\"media-left\">\r\n            <figure className=\"image is-64x64\">\r\n              <img src={image} alt=\"Placeholder image\" />\r\n            </figure>\r\n          </div>\r\n          <div className=\"media-content\">\r\n            <h4 className=\"title is-size-5-desktop is-size-6-touch has-text-light\">\r\n              {title}\r\n            </h4>\r\n            <p className=\"subtitle is-size-5-desktop is-size-6-touch has-text-light\">\r\n              {subtitle}\r\n            </p>\r\n            <div className=\"tags\">\r\n              {tags.map(tag => (\r\n                <span className=\"tag\" key={tag}>\r\n                  {tag}\r\n                </span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </a>\r\n)\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  link: PropTypes.string,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n  image: PropTypes.string,\r\n}\r\n\r\nCard.defaultProps = {\r\n  link: null,\r\n  tags: [],\r\n  image: null,\r\n}\r\n\r\nexport default Card\r\n","export { default } from './Card'\r\n","/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from 'components/Header'\r\nimport 'styles/layout.scss'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer className=\"footer\">\r\n          <p className=\"has-text-centered\">\r\n            Â© {new Date().getFullYear()}, Built with\r\n            {` `}\r\n            <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n          </p>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","export { default } from './layout'\r\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Layout from 'components/Layout'\r\nimport SEO from 'components/SEO'\r\n\r\n// import { Container } from './styles';\r\nimport Card from 'components/Card'\r\nimport Title from 'components/Title'\r\n\r\nimport photo from 'assets/images/profile.jpg'\r\n\r\nexport default class blog extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <SEO\r\n          title=\"Blog\"\r\n          description=\"Projects developed for study\"\r\n          keywords=\"React, React JS, React Native, Node, Front-end, Back-end, API, developer\"\r\n        />\r\n        <section className=\"section content is-size-4-desktop is-size-5-touch\">\r\n          <Title>Blog</Title>\r\n          <p className=\"has-text-centered\">\r\n            Follow me on <a href=\"https://github.com/leandrodsi\">GitHub</a>.\r\n          </p>\r\n          <div className=\"columns is-centered\">\r\n            <div className=\"column is-half\">\r\n              <Card\r\n                title=\"Post #1\"\r\n                subtitle=\"Build your personal page using Gatsby\"\r\n                link=\"https://www.google.com\"\r\n                tags={['React', 'Gatsby']}\r\n                image={photo}\r\n              />\r\n              <Card\r\n                title=\"Post #2\"\r\n                subtitle=\"Build your personal page using Gatsby\"\r\n                link=\"https://medium.com/@luanorlandi/learn-react-easily-with-this-rule\"\r\n                tags={['React', 'Gatsby']}\r\n                image={photo}\r\n              />\r\n              <Card\r\n                title=\"Project #1\"\r\n                subtitle=\"Build your personal page using Gatsby\"\r\n                link=\"https://www.google.com\"\r\n                tags={['React', 'Gatsby']}\r\n                image={photo}\r\n              />\r\n            </div>\r\n          </div>\r\n          <p className=\"has-text-centered\">\r\n            Check out my <Link to=\"/stacks\">stacks</Link>.\r\n          </p>\r\n        </section>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport ogImage from 'assets/images/profile.jpg'\r\n\r\nfunction SEO({ description, keywords, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title || site.siteMetadata.title}\r\n      titleTemplate={title && `%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `keywords`,\r\n          content: keywords,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: 'summary',\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: keywords,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          property: `og:url`,\r\n          content: site.siteMetadata.siteUrl,\r\n        },\r\n        {\r\n          property: `og:image`,\r\n          content: `${site.siteMetadata.siteUrl}${ogImage}`,\r\n        },\r\n        {\r\n          property: `og:image:alt`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:image:type`,\r\n          content: `image/jpg`,\r\n        },\r\n        {\r\n          property: `og:type:width`,\r\n          content: `400`,\r\n        },\r\n        {\r\n          property: `og:type:height`,\r\n          content: `400`,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n  keywords: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string,\r\n}\r\n\r\nexport default SEO\r\n","export { default } from './seo'\r\n"],"sourceRoot":""}