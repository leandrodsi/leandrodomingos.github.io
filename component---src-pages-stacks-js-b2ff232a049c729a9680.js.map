{"version":3,"sources":["webpack:///./src/components/Layout/layout.js","webpack:///./src/components/Layout/index.js","webpack:///./src/pages/stacks.js","webpack:///./src/components/SEO/seo.js","webpack:///./src/components/SEO/index.js"],"names":["Layout","children","data","Header","siteTitle","site","siteMetadata","title","className","style","margin","maxWidth","padding","Date","getFullYear","href","stacks","render","description","keywords","async","src","charset","frameborder","data-theme","data-layers","data-stack-embed","to","Component","SEO","lang","meta","metaDescription","htmlAttributes","titleTemplate","name","content","author","property","siteUrl","ogImage","concat","defaultProps"],"mappings":"4IAmDeA,G,UArCA,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACVC,EAAI,OAUV,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,UAAWF,EAAKG,KAAKC,aAAaC,QAC1C,yBACEC,UAAU,YACVC,MAAO,CACLC,OAAO,SACPC,SAAU,IACVC,QAAQ,wBAGV,8BAAOX,GACP,sCACK,IAAIY,MAAOC,cADhB,mBAGE,uBAAGC,KAAK,4BAAR,eCxCV,mC,mLCSqBC,E,gLACnBC,OAAA,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEV,MAAM,SACNW,YAAY,+BACZC,SAAS,6EAEX,kBAAC,IAAD,KACE,4BACEC,OAAK,EACLC,IAAI,wDACJC,QAAQ,WAGZ,6BAASd,UAAU,qDACjB,kBAAC,IAAD,eACA,uBAAGA,UAAU,qBAAb,gBACe,uBAAGO,KAAK,iCAAR,UADf,KAGA,yBAAKP,UAAU,uBACb,yBAAKA,UAAU,kBACb,uBACEe,YAAY,IACZC,aAAW,OACXC,cAAY,UACZC,mBAAiB,OACjBX,KAAK,2EALP,iBAaN,kBAAC,OAAD,CAAMY,GAAG,KAAT,6B,GApC4BC,c,iHCKpC,SAASC,EAAT,GAA4D,IAA7CX,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,SAAUW,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,KAAMxB,EAAS,EAATA,MACxCF,EADiD,OACjDA,KAeF2B,EAAkBd,GAAeb,EAAKC,aAAaY,YAEzD,OACE,kBAAC,IAAD,CACEe,eAAgB,CACdH,QAEFvB,MAAOA,GAASF,EAAKC,aAAaC,MAClC2B,cAAe3B,GAAK,QAAYF,EAAKC,aAAaC,MAClDwB,KAAM,CACJ,CACEI,KAAK,cACLC,QAASJ,GAEX,CACEG,KAAK,WACLC,QAASjB,GAEX,CACEgB,KAAK,eACLC,QAAS,WAEX,CACED,KAAK,kBACLC,QAAS/B,EAAKC,aAAa+B,QAE7B,CACEF,KAAK,gBACLC,QAASjB,GAEX,CACEgB,KAAK,sBACLC,QAASJ,GAEX,CACEM,SAAS,WACTF,QAAS7B,GAEX,CACE+B,SAAS,iBACTF,QAASJ,GAEX,CACEM,SAAS,UACTF,QAAQ,WAEV,CACEE,SAAS,SACTF,QAAS/B,EAAKC,aAAaiC,SAE7B,CACED,SAAS,WACTF,QAAQ,GAAI/B,EAAKC,aAAaiC,QAAUC,KAE1C,CACEF,SAAS,eACTF,QAASJ,GAEX,CACEM,SAAS,gBACTF,QAAQ,aAEV,CACEE,SAAS,gBACTF,QAAQ,OAEV,CACEE,SAAS,iBACTF,QAAQ,QAEVK,OAAOV,KAKfF,EAAIa,aAAe,CACjBZ,KAAK,KACLC,KAAM,GACNb,YAAY,GACZC,SAAS,IAUIU,QCvHf","file":"component---src-pages-stacks-js-b2ff232a049c729a9680.js","sourcesContent":["/**\r\n * Layout component that queries for data\r\n * with Gatsby's useStaticQuery component\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport Header from 'components/Header'\r\nimport 'styles/layout.scss'\r\n\r\nconst Layout = ({ children }) => {\r\n  const data = useStaticQuery(graphql`\r\n    query SiteTitleQuery {\r\n      site {\r\n        siteMetadata {\r\n          title\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  return (\r\n    <>\r\n      <Header siteTitle={data.site.siteMetadata.title} />\r\n      <div\r\n        className=\"container\"\r\n        style={{\r\n          margin: `0 auto`,\r\n          maxWidth: 960,\r\n          padding: `0 1.0875rem 1.45rem`,\r\n        }}\r\n      >\r\n        <main>{children}</main>\r\n        <footer>\r\n          Â© {new Date().getFullYear()}, Built with\r\n          {` `}\r\n          <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\r\n        </footer>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nLayout.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Layout\r\n","export { default } from './layout'\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'gatsby'\r\nimport Helmet from 'react-helmet'\r\nimport Layout from 'components/Layout'\r\nimport SEO from 'components/SEO'\r\nimport Title from 'components/Title'\r\n\r\n// import { Container } from './styles';\r\n\r\nexport default class stacks extends Component {\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <SEO\r\n          title=\"Stacks\"\r\n          description=\"Projects developed for study\"\r\n          keywords=\"React, React JS, React Native, Node, Front-end, Back-end, API, developer\"\r\n        />\r\n        <Helmet>\r\n          <script\r\n            async\r\n            src=\"https://cdn1.stackshare.io/javascripts/client-code.js\"\r\n            charset=\"utf-8\"\r\n          ></script>\r\n        </Helmet>\r\n        <section className=\"section content is-size-4-desktop is-size-5-touch\">\r\n          <Title>Stacks</Title>\r\n          <p className=\"has-text-centered\">\r\n            Follow me on <a href=\"https://github.com/leandrodsi\">GitHub</a>.\r\n          </p>\r\n          <div className=\"columns is-centered\">\r\n            <div className=\"column is-half\">\r\n              <a\r\n                frameborder=\"0\"\r\n                data-theme=\"dark\"\r\n                data-layers=\"1,2,3,4\"\r\n                data-stack-embed=\"true\"\r\n                href=\"https://embed.stackshare.io/stacks/embed/a3bd36576fa71d78148bf42bf713ad\"\r\n              >\r\n                Stackshare\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <Link to=\"/\">Go back to the homepage</Link>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n","/**\r\n * SEO component that queries for data with\r\n *  Gatsby's useStaticQuery React hook\r\n *\r\n * See: https://www.gatsbyjs.org/docs/use-static-query/\r\n */\r\n\r\nimport React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Helmet from 'react-helmet'\r\nimport { useStaticQuery, graphql } from 'gatsby'\r\n\r\nimport ogImage from 'assets/images/profile.jpg'\r\n\r\nfunction SEO({ description, keywords, lang, meta, title }) {\r\n  const { site } = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        site {\r\n          siteMetadata {\r\n            title\r\n            description\r\n            author\r\n            siteUrl\r\n          }\r\n        }\r\n      }\r\n    `\r\n  )\r\n\r\n  const metaDescription = description || site.siteMetadata.description\r\n\r\n  return (\r\n    <Helmet\r\n      htmlAttributes={{\r\n        lang,\r\n      }}\r\n      title={title || site.siteMetadata.title}\r\n      titleTemplate={title && `%s | ${site.siteMetadata.title}`}\r\n      meta={[\r\n        {\r\n          name: `description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          name: `keywords`,\r\n          content: keywords,\r\n        },\r\n        {\r\n          name: `twitter:card`,\r\n          content: 'summary',\r\n        },\r\n        {\r\n          name: `twitter:creator`,\r\n          content: site.siteMetadata.author,\r\n        },\r\n        {\r\n          name: `twitter:title`,\r\n          content: keywords,\r\n        },\r\n        {\r\n          name: `twitter:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:title`,\r\n          content: title,\r\n        },\r\n        {\r\n          property: `og:description`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:type`,\r\n          content: `website`,\r\n        },\r\n        {\r\n          property: `og:url`,\r\n          content: site.siteMetadata.siteUrl,\r\n        },\r\n        {\r\n          property: `og:image`,\r\n          content: `${site.siteMetadata.siteUrl}${ogImage}`,\r\n        },\r\n        {\r\n          property: `og:image:alt`,\r\n          content: metaDescription,\r\n        },\r\n        {\r\n          property: `og:image:type`,\r\n          content: `image/jpg`,\r\n        },\r\n        {\r\n          property: `og:type:width`,\r\n          content: `400`,\r\n        },\r\n        {\r\n          property: `og:type:height`,\r\n          content: `400`,\r\n        },\r\n      ].concat(meta)}\r\n    />\r\n  )\r\n}\r\n\r\nSEO.defaultProps = {\r\n  lang: `en`,\r\n  meta: [],\r\n  description: ``,\r\n  keywords: ``,\r\n}\r\n\r\nSEO.propTypes = {\r\n  description: PropTypes.string,\r\n  lang: PropTypes.string,\r\n  meta: PropTypes.arrayOf(PropTypes.object),\r\n  title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default SEO\r\n","export { default } from './seo'\r\n"],"sourceRoot":""}